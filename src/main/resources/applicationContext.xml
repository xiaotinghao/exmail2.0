<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.0.xsd">

    <!-- 扫描包service及dao，使注解生效 -->
    <context:component-scan base-package="**.com.**.service"/>
    <context:component-scan base-package="**.com.**.dao"/>

    <!-- 加载配置文件 -->
    <bean id="propertyConfigurer" class="com.xs.common.utils.ConfigProperties">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:remote.properties</value>
                <value>classpath:redis.properties</value>
            </list>
        </property>
    </bean>

    <!--创建jdbc数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="autoCommitOnClose" value="true"/>
        <property name="checkoutTimeout" value="${cpool.checkoutTimeout}"/>
        <property name="initialPoolSize" value="${cpool.minPoolSize}"/>
        <property name="minPoolSize" value="${cpool.minPoolSize}"/>
        <property name="maxPoolSize" value="${cpool.maxPoolSize}"/>
        <property name="maxIdleTime" value="${cpool.maxIdleTime}"/>
        <property name="maxStatements" value="${cpool.maxStatements}"/>
        <property name="acquireIncrement" value="${cpool.acquireIncrement}"/>
        <property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}"/>
    </bean>

    <!-- 事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 创建SqlSessionFactory，同时指定数据源 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:**/com/xs/**/dao/*.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="**.com.xs.**.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- Redis配置 start -->
    <!-- 配置连接池 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- maxTotal：最大连接数，-1表示没有限制 -->
        <property name="maxTotal" value="${poolConfig.maxTotal}"/>
        <!-- maxIdle：最大空闲连接数 -->
        <property name="maxIdle" value="${poolConfig.maxIdle}"/>
        <!-- maxWaitMillis：超时毫秒数 -->
        <property name="maxWaitMillis" value="${poolConfig.maxWaitMillis}"/>
        <!-- testOnBorrow：创建连接时，会检查连接是否可用，不可用则销毁 -->
        <property name="testOnBorrow" value="${poolConfig.testOnBorrow}"/>
        <!-- testOnReturn：归还连接时，会检查连接是否可用，不可用则销毁 -->
        <property name="testOnReturn" value="${poolConfig.testOnReturn}"/>
    </bean>

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.conn.hostName}"/>
        <property name="port" value="${redis.conn.port}"/>
        <property name="password" value="${redis.conn.password}"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>

    <bean id="redisUtils" class="com.xs.common.utils.redis.impl.RedisUtilsImpl">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>
    <!-- Redis配置 end -->

    <!-- 定时任务配置 start -->
    <!--<context:component-scan base-package="**.com.**.task"/>-->
    <!-- 对应服务器CPU个数，可以并行5个task任务 -->
    <task:executor id="executor" pool-size="5"/>
    <!-- 对应每个CPU核数，每个task任务下可以并行10个方法 -->
    <task:scheduler id="scheduler" pool-size="10"/>
    <task:annotation-driven executor="executor" scheduler="scheduler"/>
    <!-- 定时任务配置 end -->

</beans>
